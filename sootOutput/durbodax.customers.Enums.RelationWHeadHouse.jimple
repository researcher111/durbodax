public final enum class durbodax.customers.Enums.RelationWHeadHouse extends java.lang.Enum
{
    public static final enum durbodax.customers.Enums.RelationWHeadHouse HOUSEHOLDER;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse SPOUSE;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse CHILD;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse CHILD_IN_LAW;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse PARENT;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse PARENT_IN_LAW;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse SIBLING;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse SIBLING_IN_LAW;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse GRANDCHILD;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse OTHER_RELATIVES;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse PARTNER_FRIEND_VISITOR;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse OTHER_NON_RELATIVES;
    public static final enum durbodax.customers.Enums.RelationWHeadHouse INMATES;
    private static final java.util.Map lookup;
    private int code;
    private static final durbodax.customers.Enums.RelationWHeadHouse[] $VALUES;
    public static java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse;

    static void <clinit>()
    {
        durbodax.customers.Enums.RelationWHeadHouse temp$0, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, relationship, temp$27, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$40, temp$41;
        java.util.HashMap temp$13;
        java.lang.Class temp$14, temp$15, temp$16;
        java.util.EnumSet temp$17, temp$18;
        java.util.Iterator temp$19;
        boolean temp$20;
        java.lang.Object temp$21, temp$26;
        java.io.PrintStream temp$22;
        java.util.Map temp$23;
        int temp$24;
        java.lang.Integer temp$25;
        durbodax.customers.Enums.RelationWHeadHouse[] temp$28;

        temp$0 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$0.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("HOUSEHOLDER", 0, 1);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse HOUSEHOLDER> = temp$0;
        temp$1 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$1.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("SPOUSE", 1, 2);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SPOUSE> = temp$1;
        temp$2 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$2.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("CHILD", 2, 3);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse CHILD> = temp$2;
        temp$3 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$3.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("CHILD_IN_LAW", 3, 4);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse CHILD_IN_LAW> = temp$3;
        temp$4 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$4.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("PARENT", 4, 5);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARENT> = temp$4;
        temp$5 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$5.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("PARENT_IN_LAW", 5, 6);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARENT_IN_LAW> = temp$5;
        temp$6 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$6.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("SIBLING", 6, 7);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SIBLING> = temp$6;
        temp$7 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$7.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("SIBLING_IN_LAW", 7, 8);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SIBLING_IN_LAW> = temp$7;
        temp$8 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$8.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("GRANDCHILD", 8, 9);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse GRANDCHILD> = temp$8;
        temp$9 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$9.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("OTHER_RELATIVES", 9, 10);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse OTHER_RELATIVES> = temp$9;
        temp$10 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$10.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("PARTNER_FRIEND_VISITOR", 10, 11);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARTNER_FRIEND_VISITOR> = temp$10;
        temp$11 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$11.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("OTHER_NON_RELATIVES", 11, 12);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse OTHER_NON_RELATIVES> = temp$11;
        temp$12 = new durbodax.customers.Enums.RelationWHeadHouse;
        specialinvoke temp$12.<durbodax.customers.Enums.RelationWHeadHouse: void <init>(java.lang.String,int,int)>("INMATES", 12, 13);
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse INMATES> = temp$12;
        temp$13 = new java.util.HashMap;
        specialinvoke temp$13.<java.util.HashMap: void <init>()>();
        <durbodax.customers.Enums.RelationWHeadHouse: java.util.Map lookup> = temp$13;
        temp$15 = <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse>;
        if temp$15 != null goto label0;

        temp$16 = staticinvoke <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$(java.lang.String)>("durbodax.customers.Enums.RelationWHeadHouse");
        <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse> = temp$16;
        temp$14 = temp$16;
        goto label1;

     label0:
        nop;
        temp$14 = <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse>;

     label1:
        nop;
        temp$17 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(temp$14);
        temp$18 = (java.util.EnumSet) temp$17;
        temp$19 = interfaceinvoke temp$18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        nop;
        temp$20 = interfaceinvoke temp$19.<java.util.Iterator: boolean hasNext()>();
        if temp$20 == 0 goto label3;

        temp$21 = interfaceinvoke temp$19.<java.util.Iterator: java.lang.Object next()>();
        relationship = (durbodax.customers.Enums.RelationWHeadHouse) temp$21;
        temp$22 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$22.<java.io.PrintStream: void println(java.lang.String)>("flow:360");
        temp$23 = <durbodax.customers.Enums.RelationWHeadHouse: java.util.Map lookup>;
        temp$24 = virtualinvoke relationship.<durbodax.customers.Enums.RelationWHeadHouse: int getCode()>();
        temp$25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(temp$24);
        temp$26 = interfaceinvoke temp$23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(temp$25, relationship);
        temp$27 = (durbodax.customers.Enums.RelationWHeadHouse) temp$26;
        nop;
        goto label2;

     label3:
        nop;
        temp$28 = newarray (durbodax.customers.Enums.RelationWHeadHouse)[13];
        temp$29 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse HOUSEHOLDER>;
        temp$28[0] = temp$29;
        temp$30 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SPOUSE>;
        temp$28[1] = temp$30;
        temp$31 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse CHILD>;
        temp$28[2] = temp$31;
        temp$32 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse CHILD_IN_LAW>;
        temp$28[3] = temp$32;
        temp$33 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARENT>;
        temp$28[4] = temp$33;
        temp$34 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARENT_IN_LAW>;
        temp$28[5] = temp$34;
        temp$35 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SIBLING>;
        temp$28[6] = temp$35;
        temp$36 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse SIBLING_IN_LAW>;
        temp$28[7] = temp$36;
        temp$37 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse GRANDCHILD>;
        temp$28[8] = temp$37;
        temp$38 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse OTHER_RELATIVES>;
        temp$28[9] = temp$38;
        temp$39 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse PARTNER_FRIEND_VISITOR>;
        temp$28[10] = temp$39;
        temp$40 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse OTHER_NON_RELATIVES>;
        temp$28[11] = temp$40;
        temp$41 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse INMATES>;
        temp$28[12] = temp$41;
        <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse[] $VALUES> = temp$28;
        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        durbodax.customers.Enums.RelationWHeadHouse this;
        java.lang.String @p0;
        int @p1, code;
        java.io.PrintStream temp$0;

        this := @this: durbodax.customers.Enums.RelationWHeadHouse;
        @p0 := @parameter0: java.lang.String;
        @p1 := @parameter1: int;
        code := @parameter2: int;
        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(@p0, @p1);
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:361");
        this.<durbodax.customers.Enums.RelationWHeadHouse: int code> = code;
        return;
    }

    public final int getCode()
    {
        durbodax.customers.Enums.RelationWHeadHouse this;
        java.io.PrintStream temp$0;
        int temp$1;

        this := @this: durbodax.customers.Enums.RelationWHeadHouse;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:362");
        temp$1 = this.<durbodax.customers.Enums.RelationWHeadHouse: int code>;
        return temp$1;
    }

    public static final durbodax.customers.Enums.RelationWHeadHouse getRelationship(int)
    {
        int code;
        java.io.PrintStream temp$0;
        java.util.Map temp$1;
        java.lang.Integer temp$2;
        java.lang.Object temp$3;
        durbodax.customers.Enums.RelationWHeadHouse temp$4;

        code := @parameter0: int;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:363");
        temp$1 = <durbodax.customers.Enums.RelationWHeadHouse: java.util.Map lookup>;
        temp$2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(code);
        temp$3 = interfaceinvoke temp$1.<java.util.Map: java.lang.Object get(java.lang.Object)>(temp$2);
        temp$4 = (durbodax.customers.Enums.RelationWHeadHouse) temp$3;
        return temp$4;
    }

    public static final durbodax.customers.Enums.RelationWHeadHouse[] values()
    {
        durbodax.customers.Enums.RelationWHeadHouse[] temp$0, temp$2;
        java.lang.Object temp$1;

        temp$0 = <durbodax.customers.Enums.RelationWHeadHouse: durbodax.customers.Enums.RelationWHeadHouse[] $VALUES>;
        temp$1 = virtualinvoke temp$0.<java.lang.Object: java.lang.Object clone()>();
        temp$2 = (durbodax.customers.Enums.RelationWHeadHouse[]) temp$1;
        return temp$2;
    }

    public static final durbodax.customers.Enums.RelationWHeadHouse valueOf(java.lang.String)
    {
        java.lang.String s;
        java.lang.Class temp$0, temp$1, temp$2;
        java.lang.Enum temp$3;
        durbodax.customers.Enums.RelationWHeadHouse temp$4;

        s := @parameter0: java.lang.String;
        temp$1 = <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse>;
        if temp$1 != null goto label0;

        temp$2 = staticinvoke <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$(java.lang.String)>("durbodax.customers.Enums.RelationWHeadHouse");
        <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse> = temp$2;
        temp$0 = temp$2;
        goto label1;

     label0:
        nop;
        temp$0 = <durbodax.customers.Enums.RelationWHeadHouse: java.lang.Class class$durbodax$customers$Enums$RelationWHeadHouse>;

     label1:
        nop;
        temp$3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(temp$0, s);
        temp$4 = (durbodax.customers.Enums.RelationWHeadHouse) temp$3;
        return temp$4;
    }

    public static final java.lang.Class class$(java.lang.String)
    {
        java.lang.String name, temp$2;
        java.lang.Class temp$0;
        java.lang.ClassNotFoundException e;
        java.lang.NoClassDefFoundError temp$1;

        name := @parameter0: java.lang.String;

     label0:
        nop;
        temp$0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(name);

     label1:
        nop;
        return temp$0;

     label2:
        nop;
        e := @caughtexception;
        temp$1 = new java.lang.NoClassDefFoundError;
        temp$2 = virtualinvoke e.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();
        specialinvoke temp$1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(temp$2);
        throw temp$1;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}
