public class durbodax.commands.ComputeBplTravel extends java.lang.Object implements durbodax.commands.Command
{

    public void <init>()
    {
        durbodax.commands.ComputeBplTravel this;

        this := @this: durbodax.commands.ComputeBplTravel;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Object execute(java.lang.String[])
    {
        durbodax.commands.ComputeBplTravel this;
        java.lang.String[] params, temp$2;
        java.io.PrintStream temp$0, temp$9, temp$13, temp$16, temp$19, temp$22, temp$25, temp$31, temp$32;
        int customerId, travelAmt, temp$3, temp$5, temp$14, temp$17, temp$20, temp$23, temp$27;
        java.lang.Object retObj, temp$1, temp$35;
        durbodax.customers.Customer c, temp$8;
        java.lang.String bpl, temp$4, temp$10, temp$11, temp$28, temp$29, temp$30, temp$34;
        durbodax.daos.CustomerDAO custDAO;
        durbodax.daos.DAOFactory temp$6;
        durbodax.daos.DerbyCustomerDAO temp$7;
        boolean temp$12, temp$15, temp$18, temp$21;
        java.lang.Integer temp$24;
        java.lang.StringBuffer temp$26, temp$33;

        this := @this: durbodax.commands.ComputeBplTravel;
        params := @parameter0: java.lang.String[];
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:136");
        customerId = 0;
        travelAmt = 0;
        temp$1 = new java.lang.Object;
        specialinvoke temp$1.<java.lang.Object: void <init>()>();
        retObj = temp$1;
        bpl = null;
        temp$2 = params;
        temp$3 = 1;
        temp$4 = temp$2[temp$3];
        temp$5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(temp$4);
        customerId = temp$5;
        temp$6 = staticinvoke <durbodax.daos.DAOFactory: durbodax.daos.DAOFactory getDAOFactory()>();
        temp$7 = virtualinvoke temp$6.<durbodax.daos.DAOFactory: durbodax.daos.DerbyCustomerDAO getCustomerDAO()>();
        custDAO = temp$7;
        temp$8 = interfaceinvoke custDAO.<durbodax.daos.CustomerDAO: durbodax.customers.Customer selectCustomer(int)>(customerId);
        c = temp$8;
        if c != null goto label0;

        goto label12;

     label0:
        nop;
        temp$9 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$9.<java.io.PrintStream: void println(java.lang.String)>("flow:137");
        temp$10 = virtualinvoke c.<durbodax.customers.Customer: java.lang.String getBirthplace()>();
        temp$11 = virtualinvoke temp$10.<java.lang.String: java.lang.String toLowerCase()>();
        bpl = temp$11;
        temp$12 = virtualinvoke bpl.<java.lang.String: boolean contains(java.lang.CharSequence)>("europe");
        if temp$12 == 0 goto label2;

        goto label1;

     label1:
        nop;
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$13.<java.io.PrintStream: void println(java.lang.String)>("flow:138");
        temp$14 = 500;
        travelAmt = temp$14;
        goto label11;

     label2:
        nop;
        temp$15 = virtualinvoke bpl.<java.lang.String: boolean contains(java.lang.CharSequence)>("south america");
        if temp$15 == 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$16 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$16.<java.io.PrintStream: void println(java.lang.String)>("flow:139");
        temp$17 = 300;
        travelAmt = temp$17;
        goto label10;

     label4:
        nop;
        temp$18 = virtualinvoke bpl.<java.lang.String: boolean contains(java.lang.CharSequence)>("africa");
        if temp$18 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$19 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$19.<java.io.PrintStream: void println(java.lang.String)>("flow:140");
        temp$20 = 1000;
        travelAmt = temp$20;
        goto label9;

     label6:
        nop;
        temp$21 = virtualinvoke bpl.<java.lang.String: boolean contains(java.lang.CharSequence)>("asia");
        if temp$21 == 0 goto label8;

        goto label7;

     label7:
        nop;
        temp$22 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$22.<java.io.PrintStream: void println(java.lang.String)>("flow:141");
        temp$23 = 888;
        travelAmt = temp$23;

     label8:
        nop;

     label9:
        nop;

     label10:
        nop;

     label11:
        nop;
        temp$24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(travelAmt);
        retObj = temp$24;
        temp$25 = <java.lang.System: java.io.PrintStream out>;
        temp$26 = new java.lang.StringBuffer;
        specialinvoke temp$26.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeBplTravel amount for customer id: ");
        temp$27 = virtualinvoke c.<durbodax.customers.Customer: int getId()>();
        temp$28 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(temp$27);
        virtualinvoke temp$26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$28);
        virtualinvoke temp$26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" = ");
        temp$29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(travelAmt);
        virtualinvoke temp$26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$29);
        temp$30 = virtualinvoke temp$26.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$25.<java.io.PrintStream: void println(java.lang.String)>(temp$30);
        goto label13;

     label12:
        nop;
        temp$31 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$31.<java.io.PrintStream: void println(java.lang.String)>("flow:142");
        temp$32 = <java.lang.System: java.io.PrintStream out>;
        temp$33 = new java.lang.StringBuffer;
        specialinvoke temp$33.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Customer: ");
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(customerId);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" not Found");
        temp$34 = virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$32.<java.io.PrintStream: void println(java.lang.String)>(temp$34);
        temp$35 = null;
        retObj = temp$35;

     label13:
        nop;
        return retObj;
    }
}
