public final enum class durbodax.customers.Enums.MaritalStatus extends java.lang.Enum
{
    public static final enum durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_PRESENT;
    public static final enum durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_ABSENT;
    public static final enum durbodax.customers.Enums.MaritalStatus SEPERATED;
    public static final enum durbodax.customers.Enums.MaritalStatus DIVORCED;
    public static final enum durbodax.customers.Enums.MaritalStatus WIDOWED;
    public static final enum durbodax.customers.Enums.MaritalStatus NEVER_MARRIED_OR_SINGLE;
    private static final java.util.Map lookup;
    private int code;
    private static final durbodax.customers.Enums.MaritalStatus[] $VALUES;
    public static java.lang.Class class$durbodax$customers$Enums$MaritalStatus;

    static void <clinit>()
    {
        durbodax.customers.Enums.MaritalStatus temp$0, temp$1, temp$2, temp$3, temp$4, temp$5, maritalStatus, temp$20, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27;
        java.util.HashMap temp$6;
        java.lang.Class temp$7, temp$8, temp$9;
        java.util.EnumSet temp$10, temp$11;
        java.util.Iterator temp$12;
        boolean temp$13;
        java.lang.Object temp$14, temp$19;
        java.io.PrintStream temp$15;
        java.util.Map temp$16;
        int temp$17;
        java.lang.Integer temp$18;
        durbodax.customers.Enums.MaritalStatus[] temp$21;

        temp$0 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$0.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("MARRIED_SPOUSE_PRESENT", 0, 1);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_PRESENT> = temp$0;
        temp$1 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$1.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("MARRIED_SPOUSE_ABSENT", 1, 2);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_ABSENT> = temp$1;
        temp$2 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$2.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("SEPERATED", 2, 3);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus SEPERATED> = temp$2;
        temp$3 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$3.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("DIVORCED", 3, 4);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus DIVORCED> = temp$3;
        temp$4 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$4.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("WIDOWED", 4, 5);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus WIDOWED> = temp$4;
        temp$5 = new durbodax.customers.Enums.MaritalStatus;
        specialinvoke temp$5.<durbodax.customers.Enums.MaritalStatus: void <init>(java.lang.String,int,int)>("NEVER_MARRIED_OR_SINGLE", 5, 6);
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus NEVER_MARRIED_OR_SINGLE> = temp$5;
        temp$6 = new java.util.HashMap;
        specialinvoke temp$6.<java.util.HashMap: void <init>()>();
        <durbodax.customers.Enums.MaritalStatus: java.util.Map lookup> = temp$6;
        temp$8 = <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus>;
        if temp$8 != null goto label0;

        temp$9 = staticinvoke <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$(java.lang.String)>("durbodax.customers.Enums.MaritalStatus");
        <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus> = temp$9;
        temp$7 = temp$9;
        goto label1;

     label0:
        nop;
        temp$7 = <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus>;

     label1:
        nop;
        temp$10 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(temp$7);
        temp$11 = (java.util.EnumSet) temp$10;
        temp$12 = interfaceinvoke temp$11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        nop;
        temp$13 = interfaceinvoke temp$12.<java.util.Iterator: boolean hasNext()>();
        if temp$13 == 0 goto label3;

        temp$14 = interfaceinvoke temp$12.<java.util.Iterator: java.lang.Object next()>();
        maritalStatus = (durbodax.customers.Enums.MaritalStatus) temp$14;
        temp$15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$15.<java.io.PrintStream: void println(java.lang.String)>("flow:344");
        temp$16 = <durbodax.customers.Enums.MaritalStatus: java.util.Map lookup>;
        temp$17 = virtualinvoke maritalStatus.<durbodax.customers.Enums.MaritalStatus: int getCode()>();
        temp$18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(temp$17);
        temp$19 = interfaceinvoke temp$16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(temp$18, maritalStatus);
        temp$20 = (durbodax.customers.Enums.MaritalStatus) temp$19;
        nop;
        goto label2;

     label3:
        nop;
        temp$21 = newarray (durbodax.customers.Enums.MaritalStatus)[6];
        temp$22 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_PRESENT>;
        temp$21[0] = temp$22;
        temp$23 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus MARRIED_SPOUSE_ABSENT>;
        temp$21[1] = temp$23;
        temp$24 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus SEPERATED>;
        temp$21[2] = temp$24;
        temp$25 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus DIVORCED>;
        temp$21[3] = temp$25;
        temp$26 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus WIDOWED>;
        temp$21[4] = temp$26;
        temp$27 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus NEVER_MARRIED_OR_SINGLE>;
        temp$21[5] = temp$27;
        <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus[] $VALUES> = temp$21;
        return;
    }

    private void <init>(java.lang.String, int, int)
    {
        durbodax.customers.Enums.MaritalStatus this;
        java.lang.String @p0;
        int @p1, code;
        java.io.PrintStream temp$0;

        this := @this: durbodax.customers.Enums.MaritalStatus;
        @p0 := @parameter0: java.lang.String;
        @p1 := @parameter1: int;
        code := @parameter2: int;
        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(@p0, @p1);
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:345");
        this.<durbodax.customers.Enums.MaritalStatus: int code> = code;
        return;
    }

    public final int getCode()
    {
        durbodax.customers.Enums.MaritalStatus this;
        java.io.PrintStream temp$0;
        int temp$1;

        this := @this: durbodax.customers.Enums.MaritalStatus;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:346");
        temp$1 = this.<durbodax.customers.Enums.MaritalStatus: int code>;
        return temp$1;
    }

    public static final durbodax.customers.Enums.MaritalStatus getStatus(int)
    {
        int code;
        java.io.PrintStream temp$0;
        java.util.Map temp$1;
        java.lang.Integer temp$2;
        java.lang.Object temp$3;
        durbodax.customers.Enums.MaritalStatus temp$4;

        code := @parameter0: int;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:347");
        temp$1 = <durbodax.customers.Enums.MaritalStatus: java.util.Map lookup>;
        temp$2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(code);
        temp$3 = interfaceinvoke temp$1.<java.util.Map: java.lang.Object get(java.lang.Object)>(temp$2);
        temp$4 = (durbodax.customers.Enums.MaritalStatus) temp$3;
        return temp$4;
    }

    public static final durbodax.customers.Enums.MaritalStatus[] values()
    {
        durbodax.customers.Enums.MaritalStatus[] temp$0, temp$2;
        java.lang.Object temp$1;

        temp$0 = <durbodax.customers.Enums.MaritalStatus: durbodax.customers.Enums.MaritalStatus[] $VALUES>;
        temp$1 = virtualinvoke temp$0.<java.lang.Object: java.lang.Object clone()>();
        temp$2 = (durbodax.customers.Enums.MaritalStatus[]) temp$1;
        return temp$2;
    }

    public static final durbodax.customers.Enums.MaritalStatus valueOf(java.lang.String)
    {
        java.lang.String s;
        java.lang.Class temp$0, temp$1, temp$2;
        java.lang.Enum temp$3;
        durbodax.customers.Enums.MaritalStatus temp$4;

        s := @parameter0: java.lang.String;
        temp$1 = <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus>;
        if temp$1 != null goto label0;

        temp$2 = staticinvoke <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$(java.lang.String)>("durbodax.customers.Enums.MaritalStatus");
        <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus> = temp$2;
        temp$0 = temp$2;
        goto label1;

     label0:
        nop;
        temp$0 = <durbodax.customers.Enums.MaritalStatus: java.lang.Class class$durbodax$customers$Enums$MaritalStatus>;

     label1:
        nop;
        temp$3 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(temp$0, s);
        temp$4 = (durbodax.customers.Enums.MaritalStatus) temp$3;
        return temp$4;
    }

    public static final java.lang.Class class$(java.lang.String)
    {
        java.lang.String name, temp$2;
        java.lang.Class temp$0;
        java.lang.ClassNotFoundException e;
        java.lang.NoClassDefFoundError temp$1;

        name := @parameter0: java.lang.String;

     label0:
        nop;
        temp$0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(name);

     label1:
        nop;
        return temp$0;

     label2:
        nop;
        e := @caughtexception;
        temp$1 = new java.lang.NoClassDefFoundError;
        temp$2 = virtualinvoke e.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();
        specialinvoke temp$1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(temp$2);
        throw temp$1;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}
