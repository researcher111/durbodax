public final class durbodax.commands.CommandPrompt$8Anonymous17 extends java.lang.Object implements durbodax.commands.PromptTest
{
    durbodax.commands.CommandPrompt this$0;

    public final boolean validate(java.lang.String)
    {
        durbodax.commands.CommandPrompt$8Anonymous17 this;
        java.lang.String input, temp$0, temp$1, temp$10, temp$14, temp$21;
        boolean temp$2, temp$4, temp$11, temp$15, temp$22, temp$24, temp$25;
        java.io.PrintStream temp$3, temp$7, temp$16, temp$23;
        java.lang.String[] values, temp$5, temp$8, temp$12, temp$19;
        int temp$6, temp$9, temp$13, temp$20;
        durbodax.commands.CommandPrompt temp$17;
        durbodax.commands.PromptTest temp$18;

        this := @this: durbodax.commands.CommandPrompt$8Anonymous17;
        input := @parameter0: java.lang.String;
        temp$0 = "";
        temp$1 = virtualinvoke input.<java.lang.String: java.lang.String trim()>();
        temp$2 = virtualinvoke temp$0.<java.lang.String: boolean equals(java.lang.Object)>(temp$1);
        if temp$2 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("flow:108");
        temp$4 = 1;
        return temp$4;

     label1:
        nop;
        temp$5 = virtualinvoke input.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");
        values = temp$5;
        if values != null goto label2;

        goto label9;

     label2:
        nop;
        temp$6 = lengthof values;
        if temp$6 == 2 goto label3;

        goto label9;

        goto label3;

     label3:
        nop;
        temp$7 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$7.<java.io.PrintStream: void println(java.lang.String)>("flow:109");
        temp$8 = values;
        temp$9 = 0;
        temp$10 = temp$8[temp$9];
        temp$11 = virtualinvoke temp$10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Under");
        if temp$11 == 0 goto label4;

        goto label5;

     label4:
        nop;
        temp$12 = values;
        temp$13 = 0;
        temp$14 = temp$12[temp$13];
        temp$15 = virtualinvoke temp$14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Over");
        if temp$15 == 0 goto label8;

        goto label5;

        goto label8;

     label5:
        nop;
        temp$16 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$16.<java.io.PrintStream: void println(java.lang.String)>("flow:110");
        temp$17 = this.<durbodax.commands.CommandPrompt$8Anonymous17: durbodax.commands.CommandPrompt this$0>;
        temp$18 = temp$17.<durbodax.commands.CommandPrompt: durbodax.commands.PromptTest number>;
        temp$19 = values;
        temp$20 = 1;
        temp$21 = temp$19[temp$20];
        temp$22 = interfaceinvoke temp$18.<durbodax.commands.PromptTest: boolean validate(java.lang.String)>(temp$21);
        if temp$22 == 0 goto label7;

        goto label6;

     label6:
        nop;
        temp$23 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$23.<java.io.PrintStream: void println(java.lang.String)>("flow:111");
        temp$24 = 1;
        return temp$24;

     label7:
        nop;

     label8:
        nop;

     label9:
        nop;
        temp$25 = 0;
        return temp$25;
    }

    public void <init>(durbodax.commands.CommandPrompt)
    {
        durbodax.commands.CommandPrompt$8Anonymous17 this;
        durbodax.commands.CommandPrompt temp$0;

        this := @this: durbodax.commands.CommandPrompt$8Anonymous17;
        temp$0 := @parameter0: durbodax.commands.CommandPrompt;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<durbodax.commands.CommandPrompt$8Anonymous17: durbodax.commands.CommandPrompt this$0> = temp$0;
        return;
    }
}
