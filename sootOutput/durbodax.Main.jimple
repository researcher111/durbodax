public class durbodax.Main extends java.lang.Object
{
    static java.io.BufferedReader bufferReader;

    static void <clinit>()
    {
        java.io.BufferedReader temp$0;
        java.io.InputStreamReader temp$1;
        java.io.InputStream temp$2;

        temp$0 = new java.io.BufferedReader;
        temp$1 = new java.io.InputStreamReader;
        temp$2 = <java.lang.System: java.io.InputStream in>;
        specialinvoke temp$1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(temp$2);
        specialinvoke temp$0.<java.io.BufferedReader: void <init>(java.io.Reader)>(temp$1);
        <durbodax.Main: java.io.BufferedReader bufferReader> = temp$0;
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args, temp$4, temp$8, temp$13, temp$17, temp$22, temp$26, temp$31, temp$35, temp$40, temp$44, temp$49, temp$53;
        java.lang.String params, temp$6, temp$7, temp$15, temp$16, temp$24, temp$25, temp$33, temp$34, temp$42, temp$43, temp$51, temp$52;
        java.io.PrintStream temp$0, temp$2, temp$11, temp$20, temp$29, temp$38, temp$46;
        durbodax.commands.ComputeInLawTax instance1, temp$1;
        java.lang.StringBuffer temp$3, temp$12, temp$21, temp$30, temp$39, temp$48;
        int temp$5, temp$14, temp$23, temp$32, temp$41, temp$50;
        java.lang.Object temp$9, temp$18, temp$27, temp$36, temp$45, temp$54;
        durbodax.commands.ComputeIncomeTaxSingle instance2, temp$10;
        durbodax.commands.ComputeChildCredit instance3, temp$19;
        durbodax.commands.ComputePromo instance4, temp$28;
        durbodax.commands.ComputeEmployedMomCredit instance5, temp$37;
        durbodax.commands.ComputeBplTravel instance6, temp$47;

        args := @parameter0: java.lang.String[];
        params = "";
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:1");
        temp$1 = new durbodax.commands.ComputeInLawTax;
        specialinvoke temp$1.<durbodax.commands.ComputeInLawTax: void <init>()>();
        instance1 = temp$1;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>("TestCase: ComputeInLaw Test Case");
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeInLaw ");
        temp$4 = args;
        temp$5 = 0;
        temp$6 = temp$4[temp$5];
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$6);
        temp$7 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$7;
        temp$8 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$9 = virtualinvoke instance1.<durbodax.commands.ComputeInLawTax: java.lang.Object execute(java.lang.String[])>(temp$8);
        temp$10 = new durbodax.commands.ComputeIncomeTaxSingle;
        specialinvoke temp$10.<durbodax.commands.ComputeIncomeTaxSingle: void <init>()>();
        instance2 = temp$10;
        temp$11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$11.<java.io.PrintStream: void println(java.lang.String)>("TestCase: ComputeIncomeTaxSingle Test Case");
        temp$12 = new java.lang.StringBuffer;
        specialinvoke temp$12.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeIncomeTaxSingle ");
        temp$13 = args;
        temp$14 = 0;
        temp$15 = temp$13[temp$14];
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$15);
        temp$16 = virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$16;
        temp$17 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$18 = virtualinvoke instance2.<durbodax.commands.ComputeIncomeTaxSingle: java.lang.Object execute(java.lang.String[])>(temp$17);
        temp$19 = new durbodax.commands.ComputeChildCredit;
        specialinvoke temp$19.<durbodax.commands.ComputeChildCredit: void <init>()>();
        instance3 = temp$19;
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>("TestCase: ComputeChildCredit Test Case");
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeChildCredit ");
        temp$22 = args;
        temp$23 = 0;
        temp$24 = temp$22[temp$23];
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$24);
        temp$25 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$25;
        temp$26 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$27 = virtualinvoke instance3.<durbodax.commands.ComputeChildCredit: java.lang.Object execute(java.lang.String[])>(temp$26);
        temp$28 = new durbodax.commands.ComputePromo;
        specialinvoke temp$28.<durbodax.commands.ComputePromo: void <init>()>();
        instance4 = temp$28;
        temp$29 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$29.<java.io.PrintStream: void println(java.lang.String)>("TestCase: ComputePromo Test Case");
        temp$30 = new java.lang.StringBuffer;
        specialinvoke temp$30.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputePromo ");
        temp$31 = args;
        temp$32 = 0;
        temp$33 = temp$31[temp$32];
        virtualinvoke temp$30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$33);
        temp$34 = virtualinvoke temp$30.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$34;
        temp$35 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$36 = virtualinvoke instance4.<durbodax.commands.ComputePromo: java.lang.Object execute(java.lang.String[])>(temp$35);
        temp$37 = new durbodax.commands.ComputeEmployedMomCredit;
        specialinvoke temp$37.<durbodax.commands.ComputeEmployedMomCredit: void <init>()>();
        instance5 = temp$37;
        temp$38 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$38.<java.io.PrintStream: void println(java.lang.String)>("TestCase: ComputeEmploymedMomCredit Test Case");
        temp$39 = new java.lang.StringBuffer;
        specialinvoke temp$39.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeEmploymedMomCredit ");
        temp$40 = args;
        temp$41 = 0;
        temp$42 = temp$40[temp$41];
        virtualinvoke temp$39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$42);
        temp$43 = virtualinvoke temp$39.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$43;
        temp$44 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$45 = virtualinvoke instance5.<durbodax.commands.ComputeEmployedMomCredit: java.lang.Object execute(java.lang.String[])>(temp$44);
        temp$46 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$46.<java.io.PrintStream: void print(java.lang.String)>("TestCase: ComputeBplTravel Test Case");
        temp$47 = new durbodax.commands.ComputeBplTravel;
        specialinvoke temp$47.<durbodax.commands.ComputeBplTravel: void <init>()>();
        instance6 = temp$47;
        temp$48 = new java.lang.StringBuffer;
        specialinvoke temp$48.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ComputeBplTravel ");
        temp$49 = args;
        temp$50 = 0;
        temp$51 = temp$49[temp$50];
        virtualinvoke temp$48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$51);
        temp$52 = virtualinvoke temp$48.<java.lang.StringBuffer: java.lang.String toString()>();
        params = temp$52;
        temp$53 = virtualinvoke params.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        temp$54 = virtualinvoke instance6.<durbodax.commands.ComputeBplTravel: java.lang.Object execute(java.lang.String[])>(temp$53);
        return;
    }

    public static void registerCommands()
    {
        java.io.PrintStream temp$0;
        durbodax.commands.ComputeBplTravel temp$1;
        durbodax.commands.GetMarketingTopBottom temp$2;
        durbodax.commands.GetMarketingCountsByGroup temp$3;
        durbodax.commands.ComputeInLawTax temp$4;
        durbodax.commands.ComputeIncomeTaxSingle temp$5;
        durbodax.commands.ComputeEmployedMomCredit temp$6;
        durbodax.commands.ComputeChildCredit temp$7;
        durbodax.commands.ComputePromo temp$8;
        durbodax.commands.CompareCustomerGroups temp$9;
        durbodax.commands.customer.InitCustomerData temp$10;
        durbodax.commands.customer.LoadCustomerData temp$11;
        durbodax.commands.customer.ViewCustomerData temp$12;
        durbodax.commands.customer.CreateCustomer temp$13;
        durbodax.commands.customer.SaveCustomerData temp$14;
        durbodax.commands.customer.UpdateCustomerAge temp$15;
        durbodax.commands.customer.UpdateEldestChildAge temp$16;
        durbodax.commands.customer.UpdateYoungestChildAge temp$17;
        durbodax.commands.customer.UpdateEducationLevel temp$18;
        durbodax.commands.customer.UpdateEmploymentStatus temp$19;
        durbodax.commands.customer.UpdateFamilyUnit temp$20;
        durbodax.commands.customer.UpdateFarmIncome temp$21;
        durbodax.commands.customer.UpdateFarmStatus temp$22;
        durbodax.commands.customer.UpdateMothersLocation temp$23;
        durbodax.commands.customer.UpdateFathersLocation temp$24;
        durbodax.commands.customer.UpdateSpousesLocation temp$25;
        durbodax.commands.customer.UpdateGender temp$26;
        durbodax.commands.customer.UpdateLaborForce temp$27;
        durbodax.commands.customer.UpdateLastYearWorked temp$28;
        durbodax.commands.customer.UpdateLinkToFather temp$29;
        durbodax.commands.customer.UpdateLinkToMother temp$30;
        durbodax.commands.customer.UpdateLinkToSpouse temp$31;
        durbodax.commands.customer.UpdateMaritalStatus temp$32;
        durbodax.commands.customer.UpdateMovedInStatus temp$33;
        durbodax.commands.customer.UpdateChildrenUnderFive temp$34;
        durbodax.commands.customer.UpdateNumberOfCouples temp$35;
        durbodax.commands.customer.UpdateNonFarmBusinessIncome temp$36;
        durbodax.commands.customer.UpdateNumberOfFamilies temp$37;
        durbodax.commands.customer.UpdateNumberFamilyMembers temp$38;
        durbodax.commands.customer.UpdateNumberOfFathers temp$39;
        durbodax.commands.customer.UpdateNumberOfMothers temp$40;
        durbodax.commands.customer.UpdateNumberOfSiblings temp$41;
        durbodax.commands.customer.UpdateOccupationIncomeScore temp$42;
        durbodax.commands.customer.UpdateOtherIncome temp$43;
        durbodax.commands.customer.UpdateOwnership temp$44;
        durbodax.commands.customer.UpdatePovertyStatus temp$45;
        durbodax.commands.customer.UpdateRace temp$46;
        durbodax.commands.customer.UpdateRelationshipWithHeadHouse temp$47;
        durbodax.commands.customer.UpdateRent temp$48;
        durbodax.commands.customer.UpdateResidence temp$49;
        durbodax.commands.customer.UpdateResidentialStatus temp$50;
        durbodax.commands.customer.UpdateSchoolStatus temp$51;
        durbodax.commands.customer.UpdateSchoolType temp$52;
        durbodax.commands.customer.UpdateSocialSecurityIncome temp$53;
        durbodax.commands.customer.UpdateSocioEconomicIndex temp$54;
        durbodax.commands.customer.UpdateTotalFamilyIncome temp$55;
        durbodax.commands.customer.UpdateTotalPersonalIncome temp$56;
        durbodax.commands.customer.UpdateTotalWageAndSalaryIncome temp$57;
        durbodax.commands.customer.UpdateTotalWelfareIncome temp$58;
        durbodax.commands.customer.UpdateHouseValue temp$59;
        durbodax.commands.customer.UpdateVeteranStatus temp$60;
        durbodax.commands.customer.UpdateWorkingStatus temp$61;
        durbodax.commands.customer.UpdateHoursWorkedPerWeek temp$62;
        durbodax.commands.customer.UpdateWeeksWorkedPerYear temp$63;
        durbodax.commands.customer.UpdateBirthPlace temp$64;

        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:5");
        temp$1 = new durbodax.commands.ComputeBplTravel;
        specialinvoke temp$1.<durbodax.commands.ComputeBplTravel: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputeBplTravel", temp$1);
        temp$2 = new durbodax.commands.GetMarketingTopBottom;
        specialinvoke temp$2.<durbodax.commands.GetMarketingTopBottom: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("GetMarketingTopBottom", temp$2);
        temp$3 = new durbodax.commands.GetMarketingCountsByGroup;
        specialinvoke temp$3.<durbodax.commands.GetMarketingCountsByGroup: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("GetMarketingCountsByGroup", temp$3);
        temp$4 = new durbodax.commands.ComputeInLawTax;
        specialinvoke temp$4.<durbodax.commands.ComputeInLawTax: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputeInLawTax", temp$4);
        temp$5 = new durbodax.commands.ComputeIncomeTaxSingle;
        specialinvoke temp$5.<durbodax.commands.ComputeIncomeTaxSingle: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputeIncomeTaxSingle", temp$5);
        temp$6 = new durbodax.commands.ComputeEmployedMomCredit;
        specialinvoke temp$6.<durbodax.commands.ComputeEmployedMomCredit: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputeEmployedMomCredit", temp$6);
        temp$7 = new durbodax.commands.ComputeChildCredit;
        specialinvoke temp$7.<durbodax.commands.ComputeChildCredit: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputeChildCredit", temp$7);
        temp$8 = new durbodax.commands.ComputePromo;
        specialinvoke temp$8.<durbodax.commands.ComputePromo: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ComputePromo", temp$8);
        temp$9 = new durbodax.commands.CompareCustomerGroups;
        specialinvoke temp$9.<durbodax.commands.CompareCustomerGroups: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("CompareCustomerGroups", temp$9);
        temp$10 = new durbodax.commands.customer.InitCustomerData;
        specialinvoke temp$10.<durbodax.commands.customer.InitCustomerData: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("InitCustomerData", temp$10);
        temp$11 = new durbodax.commands.customer.LoadCustomerData;
        specialinvoke temp$11.<durbodax.commands.customer.LoadCustomerData: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("LoadCustomerData", temp$11);
        temp$12 = new durbodax.commands.customer.ViewCustomerData;
        specialinvoke temp$12.<durbodax.commands.customer.ViewCustomerData: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("ViewCustomerData", temp$12);
        temp$13 = new durbodax.commands.customer.CreateCustomer;
        specialinvoke temp$13.<durbodax.commands.customer.CreateCustomer: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("CreateCustomer", temp$13);
        temp$14 = new durbodax.commands.customer.SaveCustomerData;
        specialinvoke temp$14.<durbodax.commands.customer.SaveCustomerData: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("SaveCustomerData", temp$14);
        temp$15 = new durbodax.commands.customer.UpdateCustomerAge;
        specialinvoke temp$15.<durbodax.commands.customer.UpdateCustomerAge: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateCustomerAge", temp$15);
        temp$16 = new durbodax.commands.customer.UpdateEldestChildAge;
        specialinvoke temp$16.<durbodax.commands.customer.UpdateEldestChildAge: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateEldestChildAge", temp$16);
        temp$17 = new durbodax.commands.customer.UpdateYoungestChildAge;
        specialinvoke temp$17.<durbodax.commands.customer.UpdateYoungestChildAge: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateYoungestChildAge", temp$17);
        temp$18 = new durbodax.commands.customer.UpdateEducationLevel;
        specialinvoke temp$18.<durbodax.commands.customer.UpdateEducationLevel: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateEducationLevel", temp$18);
        temp$19 = new durbodax.commands.customer.UpdateEmploymentStatus;
        specialinvoke temp$19.<durbodax.commands.customer.UpdateEmploymentStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateEmploymentStatus", temp$19);
        temp$20 = new durbodax.commands.customer.UpdateFamilyUnit;
        specialinvoke temp$20.<durbodax.commands.customer.UpdateFamilyUnit: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateFamilyUnit", temp$20);
        temp$21 = new durbodax.commands.customer.UpdateFarmIncome;
        specialinvoke temp$21.<durbodax.commands.customer.UpdateFarmIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateFarmIncome", temp$21);
        temp$22 = new durbodax.commands.customer.UpdateFarmStatus;
        specialinvoke temp$22.<durbodax.commands.customer.UpdateFarmStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateFarmStatus", temp$22);
        temp$23 = new durbodax.commands.customer.UpdateMothersLocation;
        specialinvoke temp$23.<durbodax.commands.customer.UpdateMothersLocation: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateMothersLocation", temp$23);
        temp$24 = new durbodax.commands.customer.UpdateFathersLocation;
        specialinvoke temp$24.<durbodax.commands.customer.UpdateFathersLocation: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateFathersLocation", temp$24);
        temp$25 = new durbodax.commands.customer.UpdateSpousesLocation;
        specialinvoke temp$25.<durbodax.commands.customer.UpdateSpousesLocation: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateSpousesLocation", temp$25);
        temp$26 = new durbodax.commands.customer.UpdateGender;
        specialinvoke temp$26.<durbodax.commands.customer.UpdateGender: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateGender", temp$26);
        temp$27 = new durbodax.commands.customer.UpdateLaborForce;
        specialinvoke temp$27.<durbodax.commands.customer.UpdateLaborForce: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateLaborForce", temp$27);
        temp$28 = new durbodax.commands.customer.UpdateLastYearWorked;
        specialinvoke temp$28.<durbodax.commands.customer.UpdateLastYearWorked: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateLastYearWorked", temp$28);
        temp$29 = new durbodax.commands.customer.UpdateLinkToFather;
        specialinvoke temp$29.<durbodax.commands.customer.UpdateLinkToFather: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateLinkToFather", temp$29);
        temp$30 = new durbodax.commands.customer.UpdateLinkToMother;
        specialinvoke temp$30.<durbodax.commands.customer.UpdateLinkToMother: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateLinkToMother", temp$30);
        temp$31 = new durbodax.commands.customer.UpdateLinkToSpouse;
        specialinvoke temp$31.<durbodax.commands.customer.UpdateLinkToSpouse: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateLinkToSpouse", temp$31);
        temp$32 = new durbodax.commands.customer.UpdateMaritalStatus;
        specialinvoke temp$32.<durbodax.commands.customer.UpdateMaritalStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateMaritalStatus", temp$32);
        temp$33 = new durbodax.commands.customer.UpdateMovedInStatus;
        specialinvoke temp$33.<durbodax.commands.customer.UpdateMovedInStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateMovedInStatus", temp$33);
        temp$34 = new durbodax.commands.customer.UpdateChildrenUnderFive;
        specialinvoke temp$34.<durbodax.commands.customer.UpdateChildrenUnderFive: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfChildrenUnderFive", temp$34);
        temp$35 = new durbodax.commands.customer.UpdateNumberOfCouples;
        specialinvoke temp$35.<durbodax.commands.customer.UpdateNumberOfCouples: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfCouples", temp$35);
        temp$36 = new durbodax.commands.customer.UpdateNonFarmBusinessIncome;
        specialinvoke temp$36.<durbodax.commands.customer.UpdateNonFarmBusinessIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNonFarmBusinessIncome", temp$36);
        temp$37 = new durbodax.commands.customer.UpdateNumberOfFamilies;
        specialinvoke temp$37.<durbodax.commands.customer.UpdateNumberOfFamilies: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfFamilies", temp$37);
        temp$38 = new durbodax.commands.customer.UpdateNumberFamilyMembers;
        specialinvoke temp$38.<durbodax.commands.customer.UpdateNumberFamilyMembers: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberFamilyMembers", temp$38);
        temp$39 = new durbodax.commands.customer.UpdateNumberOfFathers;
        specialinvoke temp$39.<durbodax.commands.customer.UpdateNumberOfFathers: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfFathers", temp$39);
        temp$40 = new durbodax.commands.customer.UpdateNumberOfMothers;
        specialinvoke temp$40.<durbodax.commands.customer.UpdateNumberOfMothers: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfMothers", temp$40);
        temp$41 = new durbodax.commands.customer.UpdateNumberOfSiblings;
        specialinvoke temp$41.<durbodax.commands.customer.UpdateNumberOfSiblings: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateNumberOfSiblings", temp$41);
        temp$42 = new durbodax.commands.customer.UpdateOccupationIncomeScore;
        specialinvoke temp$42.<durbodax.commands.customer.UpdateOccupationIncomeScore: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateOccupationScore", temp$42);
        temp$43 = new durbodax.commands.customer.UpdateOtherIncome;
        specialinvoke temp$43.<durbodax.commands.customer.UpdateOtherIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateOtherIncome", temp$43);
        temp$44 = new durbodax.commands.customer.UpdateOwnership;
        specialinvoke temp$44.<durbodax.commands.customer.UpdateOwnership: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateOwnership", temp$44);
        temp$45 = new durbodax.commands.customer.UpdatePovertyStatus;
        specialinvoke temp$45.<durbodax.commands.customer.UpdatePovertyStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdatePovertyStatus", temp$45);
        temp$46 = new durbodax.commands.customer.UpdateRace;
        specialinvoke temp$46.<durbodax.commands.customer.UpdateRace: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateRace", temp$46);
        temp$47 = new durbodax.commands.customer.UpdateRelationshipWithHeadHouse;
        specialinvoke temp$47.<durbodax.commands.customer.UpdateRelationshipWithHeadHouse: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateRelationWithHouseHolder", temp$47);
        temp$48 = new durbodax.commands.customer.UpdateRent;
        specialinvoke temp$48.<durbodax.commands.customer.UpdateRent: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateRent", temp$48);
        temp$49 = new durbodax.commands.customer.UpdateResidence;
        specialinvoke temp$49.<durbodax.commands.customer.UpdateResidence: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateResidence", temp$49);
        temp$50 = new durbodax.commands.customer.UpdateResidentialStatus;
        specialinvoke temp$50.<durbodax.commands.customer.UpdateResidentialStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateResidentialStatus", temp$50);
        temp$51 = new durbodax.commands.customer.UpdateSchoolStatus;
        specialinvoke temp$51.<durbodax.commands.customer.UpdateSchoolStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateSchoolStatus", temp$51);
        temp$52 = new durbodax.commands.customer.UpdateSchoolType;
        specialinvoke temp$52.<durbodax.commands.customer.UpdateSchoolType: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateSchoolType", temp$52);
        temp$53 = new durbodax.commands.customer.UpdateSocialSecurityIncome;
        specialinvoke temp$53.<durbodax.commands.customer.UpdateSocialSecurityIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateSocialSecurityIncome", temp$53);
        temp$54 = new durbodax.commands.customer.UpdateSocioEconomicIndex;
        specialinvoke temp$54.<durbodax.commands.customer.UpdateSocioEconomicIndex: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateSocioEconomicIndex", temp$54);
        temp$55 = new durbodax.commands.customer.UpdateTotalFamilyIncome;
        specialinvoke temp$55.<durbodax.commands.customer.UpdateTotalFamilyIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateTotalFamilyIncome", temp$55);
        temp$56 = new durbodax.commands.customer.UpdateTotalPersonalIncome;
        specialinvoke temp$56.<durbodax.commands.customer.UpdateTotalPersonalIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateTotalPersonalIncome", temp$56);
        temp$57 = new durbodax.commands.customer.UpdateTotalWageAndSalaryIncome;
        specialinvoke temp$57.<durbodax.commands.customer.UpdateTotalWageAndSalaryIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateTotalWageAndSalaryIncome", temp$57);
        temp$58 = new durbodax.commands.customer.UpdateTotalWelfareIncome;
        specialinvoke temp$58.<durbodax.commands.customer.UpdateTotalWelfareIncome: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateTotalWelfareIncome", temp$58);
        temp$59 = new durbodax.commands.customer.UpdateHouseValue;
        specialinvoke temp$59.<durbodax.commands.customer.UpdateHouseValue: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateHouseValue", temp$59);
        temp$60 = new durbodax.commands.customer.UpdateVeteranStatus;
        specialinvoke temp$60.<durbodax.commands.customer.UpdateVeteranStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateVeteranStatus", temp$60);
        temp$61 = new durbodax.commands.customer.UpdateWorkingStatus;
        specialinvoke temp$61.<durbodax.commands.customer.UpdateWorkingStatus: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateWorkingStatus", temp$61);
        temp$62 = new durbodax.commands.customer.UpdateHoursWorkedPerWeek;
        specialinvoke temp$62.<durbodax.commands.customer.UpdateHoursWorkedPerWeek: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateHoursWorkedPerWeek", temp$62);
        temp$63 = new durbodax.commands.customer.UpdateWeeksWorkedPerYear;
        specialinvoke temp$63.<durbodax.commands.customer.UpdateWeeksWorkedPerYear: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateWeeksWorkedPerYear", temp$63);
        temp$64 = new durbodax.commands.customer.UpdateBirthPlace;
        specialinvoke temp$64.<durbodax.commands.customer.UpdateBirthPlace: void <init>()>();
        staticinvoke <durbodax.commands.CommandUtil: void registerCommand(java.lang.String,durbodax.commands.Command)>("UpdateBirthPlace", temp$64);
        return;
    }

    public static void registerCommandPrompts()
    {
        java.io.PrintStream temp$0;
        durbodax.commands.CommandPrompt temp$1, temp$3, temp$5, temp$7, temp$9, temp$11, temp$13, temp$15, temp$17, temp$19, temp$21, temp$23, temp$25, temp$27, temp$29, temp$31, temp$33, temp$35, temp$37, temp$39, temp$41, temp$43, temp$45, temp$47, temp$49, temp$51, temp$53, temp$55, temp$57, temp$59, temp$61, temp$63, temp$65, temp$67, temp$69, temp$71, temp$73, temp$75, temp$77, temp$79, temp$81, temp$83, temp$85, temp$87, temp$89, temp$91, temp$93, temp$95, temp$97, temp$99, temp$101, temp$103, temp$105, temp$107, temp$109, temp$111, temp$113, temp$115, temp$117, temp$119, temp$121;
        java.lang.String[] temp$2, temp$4, temp$6, temp$8, temp$10, temp$12, temp$14, temp$16, temp$18, temp$20, temp$22, temp$24, temp$26, temp$28, temp$30, temp$32, temp$34, temp$36, temp$38, temp$40, temp$42, temp$44, temp$46, temp$48, temp$50, temp$52, temp$54, temp$56, temp$58, temp$60, temp$62, temp$64, temp$66, temp$68, temp$70, temp$72, temp$74, temp$76, temp$78, temp$80, temp$82, temp$84, temp$86, temp$88, temp$90, temp$92, temp$94, temp$96, temp$98, temp$100, temp$102, temp$104, temp$106, temp$108, temp$110, temp$112, temp$114, temp$116, temp$118, temp$120, temp$122;

        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:6");
        temp$1 = new durbodax.commands.CommandPrompt;
        temp$2 = newarray (java.lang.String)[2];
        temp$2[0] = "Customer ID";
        temp$2[1] = "number";
        specialinvoke temp$1.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$2);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputeEmployedMomCredit", temp$1);
        temp$3 = new durbodax.commands.CommandPrompt;
        temp$4 = newarray (java.lang.String)[2];
        temp$4[0] = "Customer ID";
        temp$4[1] = "number";
        specialinvoke temp$3.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$4);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputeBplTravel", temp$3);
        temp$5 = new durbodax.commands.CommandPrompt;
        temp$6 = newarray (java.lang.String)[2];
        temp$6[0] = "Customer ID";
        temp$6[1] = "number";
        specialinvoke temp$5.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$6);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputeInLawTax", temp$5);
        temp$7 = new durbodax.commands.CommandPrompt;
        temp$8 = newarray (java.lang.String)[2];
        temp$8[0] = "Customer ID";
        temp$8[1] = "number";
        specialinvoke temp$7.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$8);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputeIncomeTaxSingle", temp$7);
        temp$9 = new durbodax.commands.CommandPrompt;
        temp$10 = newarray (java.lang.String)[2];
        temp$10[0] = "Customer ID";
        temp$10[1] = "number";
        specialinvoke temp$9.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$10);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputeChildCredit", temp$9);
        temp$11 = new durbodax.commands.CommandPrompt;
        temp$12 = newarray (java.lang.String)[2];
        temp$12[0] = "Customer ID";
        temp$12[1] = "number";
        specialinvoke temp$11.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$12);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("ComputePromo", temp$11);
        temp$13 = new durbodax.commands.CommandPrompt;
        temp$14 = newarray (java.lang.String)[12];
        temp$14[0] = "\'Top\' or \'Bottom\'";
        temp$14[1] = "string";
        temp$14[2] = "Number of Records";
        temp$14[3] = "number";
        temp$14[4] = "Range of Ages ex. 20-50";
        temp$14[5] = "string";
        temp$14[6] = "Range of Incomes ex. 10000-50000";
        temp$14[7] = "string";
        temp$14[8] = "Birth Place (record id or \'ALL\')";
        temp$14[9] = "string";
        temp$14[10] = "Marital Status (record id or \'ALL\')";
        temp$14[11] = "string";
        specialinvoke temp$13.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$14);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("GetMarketingCountsByGroup", temp$13);
        temp$15 = new durbodax.commands.CommandPrompt;
        temp$16 = newarray (java.lang.String)[12];
        temp$16[0] = "\'Top\' or \'Bottom\'";
        temp$16[1] = "string";
        temp$16[2] = "Number of Records";
        temp$16[3] = "number";
        temp$16[4] = "Range of Ages ex. 20-50";
        temp$16[5] = "string";
        temp$16[6] = "Range of Incomes ex. 10000-50000";
        temp$16[7] = "string";
        temp$16[8] = "Birth Place (record id or \'ALL\')";
        temp$16[9] = "string";
        temp$16[10] = "Marital Status (record id or \'ALL\')";
        temp$16[11] = "string";
        specialinvoke temp$15.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$16);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("GetMarketingTopBottom", temp$15);
        temp$17 = new durbodax.commands.CommandPrompt;
        temp$18 = newarray (java.lang.String)[6];
        temp$18[0] = "Age Comparison (eg. Under/Over-50) \n[Hit Enter to skip comparison]";
        temp$18[1] = "ageCompare";
        temp$18[2] = "Income Comparison (eg. Under/Over-50000) \n[Hit Enter to skip comparison]";
        temp$18[3] = "incomeCompare";
        temp$18[4] = "\nMARRIED_SPOUSE_PRESENT - 1\nMARRIED_SPOUSE_ABSENT - 2\nSEPERATED - 3\nDIVORCED - 4\nWIDOWED - 5\nNEVER_MARRIED_OR_SINGLE - 6\nMarital Status \n[Hit Enter to skip comparison]";
        temp$18[5] = "marital_status";
        specialinvoke temp$17.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$18);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("CompareCustomerGroups", temp$17);
        temp$19 = new durbodax.commands.CommandPrompt;
        temp$20 = newarray (java.lang.String)[2];
        temp$20[0] = "Customer ID";
        temp$20[1] = "string";
        specialinvoke temp$19.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$20);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("LoadCustomerData", temp$19);
        temp$21 = new durbodax.commands.CommandPrompt;
        temp$22 = newarray (java.lang.String)[2];
        temp$22[0] = "Customer Age";
        temp$22[1] = "number";
        specialinvoke temp$21.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$22);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateCustomerAge", temp$21);
        temp$23 = new durbodax.commands.CommandPrompt;
        temp$24 = newarray (java.lang.String)[2];
        temp$24[0] = "Eldest Child Age";
        temp$24[1] = "number";
        specialinvoke temp$23.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$24);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateEldestChildAge", temp$23);
        temp$25 = new durbodax.commands.CommandPrompt;
        temp$26 = newarray (java.lang.String)[2];
        temp$26[0] = "Youngest Child Age";
        temp$26[1] = "number";
        specialinvoke temp$25.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$26);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateYoungestChildAge", temp$25);
        temp$27 = new durbodax.commands.CommandPrompt;
        temp$28 = newarray (java.lang.String)[2];
        temp$28[0] = "\nNA_OR_NONE - 0\nNONE_OR_PRESCHOOL - 1\nELEMENTARY - 2\nMIDDLE_SCHOOL - 3\nFRESHMEN - 4\nSOPHMORE - 5\nJUNIOR - 6\nSENIOR - 7\nUNDERGRAD - 8\nGRADUATE - 9\nEducation Level";
        temp$28[1] = "number0_9";
        specialinvoke temp$27.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$28);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateEducationLevel", temp$27);
        temp$29 = new durbodax.commands.CommandPrompt;
        temp$30 = newarray (java.lang.String)[2];
        temp$30[0] = "\nNA - 0\nEMPLOYED - 1\nUNEMPLOYED - 2\nNOT_IN_LABOR_FORCE - 3\nEmployment Status";
        temp$30[1] = "number0_3";
        specialinvoke temp$29.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$30);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateEmploymentStatus", temp$29);
        temp$31 = new durbodax.commands.CommandPrompt;
        temp$32 = newarray (java.lang.String)[2];
        temp$32[0] = "Family Unit Number";
        temp$32[1] = "number";
        specialinvoke temp$31.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$32);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateFamilyUnit", temp$31);
        temp$33 = new durbodax.commands.CommandPrompt;
        temp$34 = newarray (java.lang.String)[2];
        temp$34[0] = "\n999999 - for N/A\nFarm Income";
        temp$34[1] = "number";
        specialinvoke temp$33.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$34);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateFarmIncome", temp$33);
        temp$35 = new durbodax.commands.CommandPrompt;
        temp$36 = newarray (java.lang.String)[2];
        temp$36[0] = "\nNON_FARM - 1\nFARM - 2\nFarm Status";
        temp$36[1] = "number1_or_2";
        specialinvoke temp$35.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$36);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateFarmStatus", temp$35);
        temp$37 = new durbodax.commands.CommandPrompt;
        temp$38 = newarray (java.lang.String)[2];
        temp$38[0] = "Mother\'s Location in Household - Number";
        temp$38[1] = "number";
        specialinvoke temp$37.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$38);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateMothersLocation", temp$37);
        temp$39 = new durbodax.commands.CommandPrompt;
        temp$40 = newarray (java.lang.String)[2];
        temp$40[0] = "Father\'s Location in Household - Number";
        temp$40[1] = "number";
        specialinvoke temp$39.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$40);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateFathersLocation", temp$39);
        temp$41 = new durbodax.commands.CommandPrompt;
        temp$42 = newarray (java.lang.String)[2];
        temp$42[0] = "Spouse Location in House - Number";
        temp$42[1] = "number";
        specialinvoke temp$41.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$42);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateSpousesLocation", temp$41);
        temp$43 = new durbodax.commands.CommandPrompt;
        temp$44 = newarray (java.lang.String)[2];
        temp$44[0] = "\nMale - 1\nFemale - 2\nGender";
        temp$44[1] = "number1_or_2";
        specialinvoke temp$43.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$44);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateGender", temp$43);
        temp$45 = new durbodax.commands.CommandPrompt;
        temp$46 = newarray (java.lang.String)[2];
        temp$46[0] = "\nN/A - 0\nNO - 1\nYES - 2\nLabor Force Participation";
        temp$46[1] = "number0_2";
        specialinvoke temp$45.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$46);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateLaborForce", temp$45);
        temp$47 = new durbodax.commands.CommandPrompt;
        temp$48 = newarray (java.lang.String)[2];
        temp$48[0] = "\nN/A - 0\nCURRENT_YEAR - 10\nPREVIOUS_YEAR - 20\nTWO_YEARS_PRIOR - 31\nTWO_TO_FIVE_YEARS - 32\nTHREE_TO_FIVE_YEARS - 33\nTHREE_TO_SIX_YEARS - 34\nSIX_TO_TEN_YEARS - 35\nSEVEN_TO_TEN_YEARS - 36\nTEN_PLUS_YEARS_AGO - 40\nNEVER_WORKED - 50\nLast Year Worked";
        temp$48[1] = "lastyear";
        specialinvoke temp$47.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$48);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateLastYearWorked", temp$47);
        temp$49 = new durbodax.commands.CommandPrompt;
        temp$50 = newarray (java.lang.String)[2];
        temp$50[0] = "\nNO_LINK - 0\nUNAMBIGUOUS_FATHER_LINK - 1\nSON_GRANDCHILD_LINK - 2\nPRECEDING_MALE - 3\nPRECEDING_MALE_SURNAME - 4\nSTEP_FATHER - 7\nLink To Father";
        temp$50[1] = "linktofather";
        specialinvoke temp$49.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$50);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateLinkToFather", temp$49);
        temp$51 = new durbodax.commands.CommandPrompt;
        temp$52 = newarray (java.lang.String)[2];
        temp$52[0] = "\nNO_LINK - 0\nUNAMBIGUOUS_MOTHER_LINK - 1\nDAUGHTER_GRANDCHILD_LINK - 2\nPRECEDING_FEMALE - 3\nPRECEDING_FEMALE_SURNAME - 4\nDAUGHTER_GRANDCHILD_SURVIVING - 5\nPRECEDING_FEMALE_SURVIVING - 6\nSTEP_MOTHER - 7\nLink To Mother";
        temp$52[1] = "number0_7";
        specialinvoke temp$51.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$52);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateLinkToMother", temp$51);
        temp$53 = new durbodax.commands.CommandPrompt;
        temp$54 = newarray (java.lang.String)[2];
        temp$54[0] = "\nNO_LINK - 0\nWIFE_FOLLOWS_HUSBAND - 1\nWIFE_PRECEDES_HUSBAND - 2\nCONSISTENT - 3\nWIFE_FOLLOWS_HUSBAND_ADJ - 4\nWIFE_PRECEDES_HUSBAND_ADJ - 5\nNON_ADJ - 6\nPREVIOUS_MARITAL_STATUS - 7\nLink to Spouse";
        temp$54[1] = "number0_7";
        specialinvoke temp$53.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$54);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateLinkToSpouse", temp$53);
        temp$55 = new durbodax.commands.CommandPrompt;
        temp$56 = newarray (java.lang.String)[2];
        temp$56[0] = "\nMARRIED_SPOUSE_PRESENT - 1\nMARRIED_SPOUSE_ABSENT - 2\nSEPERATED - 3\nDIVORCED - 4\nWIDOWED - 5\nNEVER_MARRIED_OR_SINGLE - 6\nMarital Status";
        temp$56[1] = "number1_6";
        specialinvoke temp$55.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$56);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateMaritalStatus", temp$55);
        temp$57 = new durbodax.commands.CommandPrompt;
        temp$58 = newarray (java.lang.String)[2];
        temp$58[0] = "\nNA - 0\nTHIS_OR_LAST_YEAR - 1\nTWO_YEAR_AGO - 2\nTHREE_YEARS_AGO - 3\n_4_TO_6_YEARS_AGO - 4\n_7_TO_10_YEARS_AGO - 5\n_11_20_YEARS_AGO - 6\n_21_PLUS_YEARS_AGO - 7\nBLANK - 8\nALWAYS_LIVED_HERE - 9\n\nMoved In Status";
        temp$58[1] = "number0_9";
        specialinvoke temp$57.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$58);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateMovedInStatus", temp$57);
        temp$59 = new durbodax.commands.CommandPrompt;
        temp$60 = newarray (java.lang.String)[2];
        temp$60[0] = "\nNO_CHILDREN - 0\nONE_CHILD - 1\nTWO_CHILDREN - 2\nTHREE_CHILDREN - 3\nFOUR_CHILDREN - 4\nFIVE_CHILDREN - 5\nSIX_CHILDREN - 6\nSEVEN_CHILDREN - 7\nEIGHT_CHILDREN - 8\nNINE_PLUS_CHILDREN - 9\nNumber of Children Under Five";
        temp$60[1] = "number0_9";
        specialinvoke temp$59.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$60);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfChildrenUnderFive", temp$59);
        temp$61 = new durbodax.commands.CommandPrompt;
        temp$62 = newarray (java.lang.String)[2];
        temp$62[0] = "Number of Couples in House";
        temp$62[1] = "number";
        specialinvoke temp$61.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$62);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfCouples", temp$61);
        temp$63 = new durbodax.commands.CommandPrompt;
        temp$64 = newarray (java.lang.String)[2];
        temp$64[0] = "\n999999 - for N/A\nNon-Farm Business Income";
        temp$64[1] = "number";
        specialinvoke temp$63.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$64);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNonFarmBusinessIncome", temp$63);
        temp$65 = new durbodax.commands.CommandPrompt;
        temp$66 = newarray (java.lang.String)[2];
        temp$66[0] = "\n0 - if vacant\nNumber of Families in House";
        temp$66[1] = "number";
        specialinvoke temp$65.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$66);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfFamilies", temp$65);
        temp$67 = new durbodax.commands.CommandPrompt;
        temp$68 = newarray (java.lang.String)[2];
        temp$68[0] = "Number of Family Members in House";
        temp$68[1] = "number";
        specialinvoke temp$67.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$68);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberFamilyMembers", temp$67);
        temp$69 = new durbodax.commands.CommandPrompt;
        temp$70 = newarray (java.lang.String)[2];
        temp$70[0] = "Number of Fathers in House";
        temp$70[1] = "number";
        specialinvoke temp$69.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$70);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfFathers", temp$69);
        temp$71 = new durbodax.commands.CommandPrompt;
        temp$72 = newarray (java.lang.String)[2];
        temp$72[0] = "Number of Mothers in House";
        temp$72[1] = "number";
        specialinvoke temp$71.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$72);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfMothers", temp$71);
        temp$73 = new durbodax.commands.CommandPrompt;
        temp$74 = newarray (java.lang.String)[2];
        temp$74[0] = "Birthplace";
        temp$74[1] = "string";
        specialinvoke temp$73.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$74);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateBirthPlace", temp$73);
        temp$75 = new durbodax.commands.CommandPrompt;
        temp$76 = newarray (java.lang.String)[2];
        temp$76[0] = "Number of Siblings in House";
        temp$76[1] = "number";
        specialinvoke temp$75.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$76);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateNumberOfSiblings", temp$75);
        temp$77 = new durbodax.commands.CommandPrompt;
        temp$78 = newarray (java.lang.String)[2];
        temp$78[0] = "\n0 - if N/A\nOccupation Income Score";
        temp$78[1] = "number";
        specialinvoke temp$77.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$78);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateOccupationScore", temp$77);
        temp$79 = new durbodax.commands.CommandPrompt;
        temp$80 = newarray (java.lang.String)[2];
        temp$80[0] = "\n99999 - if N/A\nOther Income";
        temp$80[1] = "number";
        specialinvoke temp$79.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$80);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateOtherIncome", temp$79);
        temp$81 = new durbodax.commands.CommandPrompt;
        temp$82 = newarray (java.lang.String)[2];
        temp$82[0] = "\nNA - 0\nOWNED - 1\nRENTED - 2\nOwnership";
        temp$82[1] = "number0_2";
        specialinvoke temp$81.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$82);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateOwnership", temp$81);
        temp$83 = new durbodax.commands.CommandPrompt;
        temp$84 = newarray (java.lang.String)[2];
        temp$84[0] = "Poverty Status - Number";
        temp$84[1] = "number";
        specialinvoke temp$83.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$84);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdatePovertyStatus", temp$83);
        temp$85 = new durbodax.commands.CommandPrompt;
        temp$86 = newarray (java.lang.String)[2];
        temp$86[0] = "\nWhite - 1\nBLACK - 2\nAMERICAN_INDIAN - 3\nCHINESE - 4\nJAPANESE - 5\nOTHER_ASIA_PAC - 6\nOTHER_RACE - 7\nRace";
        temp$86[1] = "number1_7";
        specialinvoke temp$85.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$86);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateRace", temp$85);
        temp$87 = new durbodax.commands.CommandPrompt;
        temp$88 = newarray (java.lang.String)[2];
        temp$88[0] = "\nHOUSEHOLDER - 1\nSPOUSE - 2\nCHILD - 3\nCHILD_IN_LAW - 4\nPARENT - 5\nPARENT_IN_LAW - 6\nSIBLING - 7\nSIBLING_IN_LAW - 8\nGRANDCHILD - 9\nOTHER_RELATIVES - 10\nPARTNER_FRIEND_VISITOR - 11\nOTHER_NON_RELATIVES - 12\nINMATES - 13\nRelationship w House Holder";
        temp$88[1] = "number1_13";
        specialinvoke temp$87.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$88);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateRelationWithHouseHolder", temp$87);
        temp$89 = new durbodax.commands.CommandPrompt;
        temp$90 = newarray (java.lang.String)[2];
        temp$90[0] = "\n0 - if N/A\nRent";
        temp$90[1] = "number";
        specialinvoke temp$89.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$90);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateRent", temp$89);
        temp$91 = new durbodax.commands.CommandPrompt;
        temp$92 = newarray (java.lang.String)[2];
        temp$92[0] = "Residence 5 yrs. ago";
        temp$92[1] = "string";
        specialinvoke temp$91.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$92);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateResidence", temp$91);
        temp$93 = new durbodax.commands.CommandPrompt;
        temp$94 = newarray (java.lang.String)[2];
        temp$94[0] = "\nNA - 0\nSAME_HOUSE - 1\nMOVED_NOT_REPORTED - 2\nSAME_STATE_COUNTY_DIFF_HOUSE - 3\nSAME_STATE_DIFF_COUNTY - 4\nDIFF_STATE - 5\nABROAD - 6\nSAME_STATE_NOT_REPORTED - 7\nUNKNOWN - 8\nResidential Status";
        temp$94[1] = "number0_8";
        specialinvoke temp$93.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$94);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateResidentialStatus", temp$93);
        temp$95 = new durbodax.commands.CommandPrompt;
        temp$96 = newarray (java.lang.String)[2];
        temp$96[0] = "\nNA - 0\nNO - 1\nYES - 2\nMISSING - 9\nSchool Status";
        temp$96[1] = "number_0_1_2_9";
        specialinvoke temp$95.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$96);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateSchoolStatus", temp$95);
        temp$97 = new durbodax.commands.CommandPrompt;
        temp$98 = newarray (java.lang.String)[2];
        temp$98[0] = "\nNA - 0\nNOT_ENROLLED - 1\nPUBLIC_SCHOOL - 2\nPRIVATE_SCHOOL - 3\nCHURCH_RELATED - 4\nPAROCHIAL - 5\nOTHER_PRIVATE_1980 - 6\nOTHER_PRIVATE_1970 - 7\nSchool Type";
        temp$98[1] = "number0_7";
        specialinvoke temp$97.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$98);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateSchoolType", temp$97);
        temp$99 = new durbodax.commands.CommandPrompt;
        temp$100 = newarray (java.lang.String)[2];
        temp$100[0] = "\n9999 - if N/A\nSocial Security Income";
        temp$100[1] = "number";
        specialinvoke temp$99.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$100);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateSocialSecurityIncome", temp$99);
        temp$101 = new durbodax.commands.CommandPrompt;
        temp$102 = newarray (java.lang.String)[2];
        temp$102[0] = "\n0 - if N/A\nSocio-Economic Index - Number";
        temp$102[1] = "number";
        specialinvoke temp$101.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$102);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateSocioEconomicIndex", temp$101);
        temp$103 = new durbodax.commands.CommandPrompt;
        temp$104 = newarray (java.lang.String)[2];
        temp$104[0] = "\n9999999 - if N/A\nTotal Family Income";
        temp$104[1] = "number";
        specialinvoke temp$103.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$104);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateTotalFamilyIncome", temp$103);
        temp$105 = new durbodax.commands.CommandPrompt;
        temp$106 = newarray (java.lang.String)[2];
        temp$106[0] = "\n9999999 - if N/A\nTotal Personal Income";
        temp$106[1] = "number";
        specialinvoke temp$105.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$106);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateTotalPersonalIncome", temp$105);
        temp$107 = new durbodax.commands.CommandPrompt;
        temp$108 = newarray (java.lang.String)[2];
        temp$108[0] = "\n9999999 - if N/A\nTotal Wage and Salary Income";
        temp$108[1] = "number";
        specialinvoke temp$107.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$108);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateTotalWageAndSalaryIncome", temp$107);
        temp$109 = new durbodax.commands.CommandPrompt;
        temp$110 = newarray (java.lang.String)[2];
        temp$110[0] = "\n9999999 - if N/A\nTotal Welfare Income";
        temp$110[1] = "number";
        specialinvoke temp$109.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$110);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateTotalWelfareIncome", temp$109);
        temp$111 = new durbodax.commands.CommandPrompt;
        temp$112 = newarray (java.lang.String)[2];
        temp$112[0] = "House Value";
        temp$112[1] = "number";
        specialinvoke temp$111.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$112);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateHouseValue", temp$111);
        temp$113 = new durbodax.commands.CommandPrompt;
        temp$114 = newarray (java.lang.String)[2];
        temp$114[0] = "\nNA - 0\nNO_SERVICE - 1\nYES - 2\nNOT_ASCERTAINED - 9\nVeteran Status";
        temp$114[1] = "number_0_1_2_9";
        specialinvoke temp$113.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$114);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateVeteranStatus", temp$113);
        temp$115 = new durbodax.commands.CommandPrompt;
        temp$116 = newarray (java.lang.String)[2];
        temp$116[0] = "\nNA - 0\nSELF_EMPLOYED - 1\nWAGE_OR_SALARY - 2\nNEW_WORKER - 3\nUNEMPLOYED - 4\nWorking Class Status";
        temp$116[1] = "number0_4";
        specialinvoke temp$115.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$116);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateWorkingStatus", temp$115);
        temp$117 = new durbodax.commands.CommandPrompt;
        temp$118 = newarray (java.lang.String)[2];
        temp$118[0] = "\nNA - 0\n1_TO_14_HRS - 2\n15_TO_29_HRS - 3\n30_TO_24_HRS - 4\n40_HRS - 5\n41_TO_48_HRS - 6\n49_TO_59_HRS - 7\n60_PLUS_HRS - 8\nHours Worked per Week";
        temp$118[1] = "hoursworked";
        specialinvoke temp$117.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$118);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateHoursWorkedPerWeek", temp$117);
        temp$119 = new durbodax.commands.CommandPrompt;
        temp$120 = newarray (java.lang.String)[2];
        temp$120[0] = "\nNA - 0\n1_TO_13_WEEKS - 1\n14_TO_26_WEEKS - 2\n27_TO_39_WEEKS - 3\n40_TO_47_WEEKS - 4\n48_TO_47_WEEKS - 5\n50_TO_52_WEEKS - 6\nWeeks Worked Per Year";
        temp$120[1] = "number0_6";
        specialinvoke temp$119.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$120);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("UpdateWeeksWorkedPerYear", temp$119);
        temp$121 = new durbodax.commands.CommandPrompt;
        temp$122 = newarray (java.lang.String)[102];
        temp$122[0] = "Customer Age";
        temp$122[1] = "number";
        temp$122[2] = "Eldest Child Age";
        temp$122[3] = "number";
        temp$122[4] = "Youngest Child Age";
        temp$122[5] = "number";
        temp$122[6] = "\nNA_OR_NONE - 0\nNONE_OR_PRESCHOOL - 1\nELEMENTARY - 2\nMIDDLE_SCHOOL - 3\nFRESHMEN - 4\nSOPHMORE - 5\nJUNIOR - 6\nSENIOR - 7\nUNDERGRAD - 8\nGRADUATE - 9\nEducation Level";
        temp$122[7] = "number0_9";
        temp$122[8] = "\nNA - 0\nEMPLOYED - 1\nUNEMPLOYED - 2\nNOT_IN_LABOR_FORCE - 3\nEmployment Status";
        temp$122[9] = "number0_3";
        temp$122[10] = "Family Unit Number";
        temp$122[11] = "number";
        temp$122[12] = "\n999999 - for N/A\nFarm Income";
        temp$122[13] = "number";
        temp$122[14] = "\nNON_FARM - 1\nFARM - 2\nFarm Status";
        temp$122[15] = "number1_or_2";
        temp$122[16] = "Mother\'s Location in Household - Number";
        temp$122[17] = "number";
        temp$122[18] = "Father\'s Location in Household - Number";
        temp$122[19] = "number";
        temp$122[20] = "Spouse Location in House - Number";
        temp$122[21] = "number";
        temp$122[22] = "\nMale - 1\nFemale - 2\nGender";
        temp$122[23] = "number1_or_2";
        temp$122[24] = "\nN/A - 0\nNO - 1\nYES - 2\nLabor Force Participation";
        temp$122[25] = "number0_2";
        temp$122[26] = "\nN/A - 0\nCURRENT_YEAR - 10\nPREVIOUS_YEAR - 20\nTWO_YEARS_PRIOR - 31\nTWO_TO_FIVE_YEARS - 32\nTHREE_TO_FIVE_YEARS - 33\nTHREE_TO_SIX_YEARS - 34\nSIX_TO_TEN_YEARS - 35\nSEVEN_TO_TEN_YEARS - 36\nTEN_PLUS_YEARS_AGO - 40\nNEVER_WORKED - 50\nLast Year Worked";
        temp$122[27] = "lastyear";
        temp$122[28] = "\nNO_LINK - 0\nUNAMBIGUOUS_FATHER_LINK - 1\nSON_GRANDCHILD_LINK - 2\nPRECEDING_MALE - 3\nPRECEDING_MALE_SURNAME - 4\nSTEP_FATHER - 7\nLink To Father";
        temp$122[29] = "linktofather";
        temp$122[30] = "\nNO_LINK - 0\nUNAMBIGUOUS_MOTHER_LINK - 1\nDAUGHTER_GRANDCHILD_LINK - 2\nPRECEDING_FEMALE - 3\nPRECEDING_FEMALE_SURNAME - 4\nDAUGHTER_GRANDCHILD_SURVIVING - 5\nPRECEDING_FEMALE_SURVIVING - 6\nSTEP_MOTHER - 7\nLink To Mother";
        temp$122[31] = "number0_7";
        temp$122[32] = "\nNO_LINK - 0\nWIFE_FOLLOWS_HUSBAND - 1\nWIFE_PRECEDES_HUSBAND - 2\nCONSISTENT - 3\nWIFE_FOLLOWS_HUSBAND_ADJ - 4\nWIFE_PRECEDES_HUSBAND_ADJ - 5\nNON_ADJ - 6\nPREVIOUS_MARITAL_STATUS - 7\nLink to Spouse";
        temp$122[33] = "number0_7";
        temp$122[34] = "\nMARRIED_SPOUSE_PRESENT - 1\nMARRIED_SPOUSE_ABSENT - 2\nSEPERATED - 3\nDIVORCED - 4\nWIDOWED - 5\nNEVER_MARRIED_OR_SINGLE - 6\nMarital Status";
        temp$122[35] = "number1_6";
        temp$122[36] = "\nNA - 0\nTHIS_OR_LAST_YEAR - 1\nTWO_YEAR_AGO - 2\nTHREE_YEARS_AGO - 3\n_4_TO_6_YEARS_AGO - 4\n_7_TO_10_YEARS_AGO - 5\n_11_20_YEARS_AGO - 6\n_21_PLUS_YEARS_AGO - 7\nBLANK - 8\nALWAYS_LIVED_HERE - 9\n\nMoved In Status";
        temp$122[37] = "number0_9";
        temp$122[38] = "\n999999 - for N/A\nNon-Farm Business Income";
        temp$122[39] = "number";
        temp$122[40] = "Number of Children in House";
        temp$122[41] = "number";
        temp$122[42] = "\nNO_CHILDREN - 0\nONE_CHILD - 1\nTWO_CHILDREN - 2\nTHREE_CHILDREN - 3\nFOUR_CHILDREN - 4\nFIVE_CHILDREN - 5\nSIX_CHILDREN - 6\nSEVEN_CHILDREN - 7\nEIGHT_CHILDREN - 8\nNINE_PLUS_CHILDREN - 9\nNumber of Children Under Five";
        temp$122[43] = "number0_9";
        temp$122[44] = "Number of Couples in House";
        temp$122[45] = "number";
        temp$122[46] = "\n0 - if vacant\nNumber of Families in House";
        temp$122[47] = "number";
        temp$122[48] = "Number of Family Members in House";
        temp$122[49] = "number";
        temp$122[50] = "Number of Fathers in House";
        temp$122[51] = "number";
        temp$122[52] = "Number of Mothers in House";
        temp$122[53] = "number";
        temp$122[54] = "Number of Siblings in House";
        temp$122[55] = "number";
        temp$122[56] = "\n0 - if N/A\nOccupation Income Score";
        temp$122[57] = "number";
        temp$122[58] = "\n99999 - if N/A\nOther Income";
        temp$122[59] = "number";
        temp$122[60] = "\nNA - 0\nOWNED - 1\nRENTED - 2\nOwnership";
        temp$122[61] = "number0_2";
        temp$122[62] = "Poverty Status - Number";
        temp$122[63] = "number";
        temp$122[64] = "\nWhite - 1\nBLACK - 2\nAMERICAN_INDIAN - 3\nCHINESE - 4\nJAPANESE - 5\nOTHER_ASIA_PAC - 6\nOTHER_RACE - 7\nRace";
        temp$122[65] = "number1_7";
        temp$122[66] = "\nHOUSEHOLDER - 1\nSPOUSE - 2\nCHILD - 3\nCHILD_IN_LAW - 4\nPARENT - 5\nPARENT_IN_LAW - 6\nSIBLING - 7\nSIBLING_IN_LAW - 8\nGRANDCHILD - 9\nOTHER_RELATIVES - 10\nPARTNER_FRIEND_VISITOR - 11\nOTHER_NON_RELATIVES - 12\nINMATES - 13\nRelationship w House Holder";
        temp$122[67] = "number1_13";
        temp$122[68] = "\n0 - if N/A\nRent";
        temp$122[69] = "number";
        temp$122[70] = "Residence 5 yrs. ago";
        temp$122[71] = "string";
        temp$122[72] = "\nNA - 0\nSAME_HOUSE - 1\nMOVED_NOT_REPORTED - 2\nSAME_STATE_COUNTY_DIFF_HOUSE - 3\nSAME_STATE_DIFF_COUNTY - 4\nDIFF_STATE - 5\nABROAD - 6\nSAME_STATE_NOT_REPORTED - 7\nUNKNOWN - 8\nResidential Status";
        temp$122[73] = "number0_8";
        temp$122[74] = "\nNA - 0\nNO - 1\nYES - 2\nMISSING - 9\nSchool Status";
        temp$122[75] = "number_0_1_2_9";
        temp$122[76] = "\nNA - 0\nNOT_ENROLLED - 1\nPUBLIC_SCHOOL - 2\nPRIVATE_SCHOOL - 3\nCHURCH_RELATED - 4\nPAROCHIAL - 5\nOTHER_PRIVATE_1980 - 6\nOTHER_PRIVATE_1970 - 7\nSchool Type";
        temp$122[77] = "number0_7";
        temp$122[78] = "\n9999 - if N/A\nSocial Security Income";
        temp$122[79] = "number";
        temp$122[80] = "\n0 - if N/A\nSocio-Economic Index - Number";
        temp$122[81] = "number";
        temp$122[82] = "\n9999999 - if N/A\nTotal Family Income";
        temp$122[83] = "number";
        temp$122[84] = "\n9999999 - if N/A\nTotal Personal Income";
        temp$122[85] = "number";
        temp$122[86] = "\n9999999 - if N/A\nTotal Wage and Salary Income";
        temp$122[87] = "number";
        temp$122[88] = "\n9999999 - if N/A\nTotal Welfare Income";
        temp$122[89] = "number";
        temp$122[90] = "House Value";
        temp$122[91] = "number";
        temp$122[92] = "\nNA - 0\nNO_SERVICE - 1\nYES - 2\nNOT_ASCERTAINED - 9\nVeteran Status";
        temp$122[93] = "number_0_1_2_9";
        temp$122[94] = "\nNA - 0\nSELF_EMPLOYED - 1\nWAGE_OR_SALARY - 2\nNEW_WORKER - 3\nUNEMPLOYED - 4\nWorking Class Status";
        temp$122[95] = "number0_4";
        temp$122[96] = "\nNA - 0\n1_TO_14_HRS - 2\n15_TO_29_HRS - 3\n30_TO_24_HRS - 4\n40_HRS - 5\n41_TO_48_HRS - 6\n49_TO_59_HRS - 7\n60_PLUS_HRS - 8\nHours Worked per Week";
        temp$122[97] = "hoursworked";
        temp$122[98] = "\nNA - 0\n1_TO_13_WEEKS - 1\n14_TO_26_WEEKS - 2\n27_TO_39_WEEKS - 3\n40_TO_47_WEEKS - 4\n48_TO_47_WEEKS - 5\n50_TO_52_WEEKS - 6\nWeeks Worked Per Year";
        temp$122[99] = "number0_6";
        temp$122[100] = "Birthplace";
        temp$122[101] = "string";
        specialinvoke temp$121.<durbodax.commands.CommandPrompt: void <init>(java.lang.String[])>(temp$122);
        staticinvoke <durbodax.commands.CommandPromptUtil: void registerCommandPrompt(java.lang.String,durbodax.commands.CommandPrompt)>("CreateCustomer", temp$121);
        return;
    }

    public void dummyMethod(java.lang.String)
    {
        durbodax.Main this;
        java.lang.String string;
        java.io.PrintStream temp$0;

        this := @this: durbodax.Main;
        string := @parameter0: java.lang.String;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:7");
        return;
    }

    public static void processInput(java.lang.String)
    {
        java.lang.String statement, temp$6, temp$10, temp$16, temp$21, temp$22, temp$26;
        java.io.PrintStream temp$0, temp$3, temp$12, temp$19, temp$28, temp$29, temp$31, temp$32;
        java.lang.String[] tokens, temp$1, temp$4, temp$8, temp$14, temp$27;
        int temp$2, temp$5, temp$9, temp$15, i, temp$18, temp$24, temp$25;
        durbodax.commands.Command command, temp$7;
        durbodax.commands.CommandPrompt prompt, temp$11;
        java.lang.StringBuilder userInput, temp$13, temp$17, temp$23;
        java.lang.StringBuffer temp$20;
        java.lang.Object temp$30;

        statement := @parameter0: java.lang.String;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:8");
        temp$1 = virtualinvoke statement.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        tokens = temp$1;
        temp$2 = lengthof tokens;
        if temp$2 > 0 goto label0;

        goto label9;

     label0:
        nop;
        temp$3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("flow:9");
        temp$4 = tokens;
        temp$5 = 0;
        temp$6 = temp$4[temp$5];
        temp$7 = staticinvoke <durbodax.commands.CommandUtil: durbodax.commands.Command getCommand(java.lang.String)>(temp$6);
        command = temp$7;
        temp$8 = tokens;
        temp$9 = 0;
        temp$10 = temp$8[temp$9];
        temp$11 = staticinvoke <durbodax.commands.CommandPromptUtil: durbodax.commands.CommandPrompt getCommandPrompt(java.lang.String)>(temp$10);
        prompt = temp$11;
        if prompt != null goto label1;

        goto label5;

     label1:
        nop;
        temp$12 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$12.<java.io.PrintStream: void println(java.lang.String)>("flow:10");
        temp$13 = new java.lang.StringBuilder;
        specialinvoke temp$13.<java.lang.StringBuilder: void <init>()>();
        userInput = temp$13;
        temp$14 = tokens;
        temp$15 = 0;
        temp$16 = temp$14[temp$15];
        temp$17 = virtualinvoke userInput.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$16);
        i = 0;

     label2:
        nop;
        temp$18 = virtualinvoke prompt.<durbodax.commands.CommandPrompt: int size()>();
        if i < temp$18 goto label3;

        goto label4;

     label3:
        nop;
        temp$19 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$19.<java.io.PrintStream: void println(java.lang.String)>("flow:11");
        temp$20 = new java.lang.StringBuffer;
        specialinvoke temp$20.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("~");
        temp$21 = virtualinvoke prompt.<durbodax.commands.CommandPrompt: java.lang.String displayNextPrompt()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$21);
        temp$22 = virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$23 = virtualinvoke userInput.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(temp$22);
        nop;
        temp$24 = i;
        temp$25 = temp$24 + 2;
        i = temp$25;
        goto label2;

     label4:
        nop;
        virtualinvoke prompt.<durbodax.commands.CommandPrompt: void reset()>();
        temp$26 = virtualinvoke userInput.<java.lang.StringBuilder: java.lang.String toString()>();
        temp$27 = virtualinvoke temp$26.<java.lang.String: java.lang.String[] split(java.lang.String)>("~");
        tokens = temp$27;

     label5:
        nop;
        if command != null goto label6;

        goto label7;

     label6:
        nop;
        temp$28 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$28.<java.io.PrintStream: void println(java.lang.String)>("flow:12");
        temp$29 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$29.<java.io.PrintStream: void println(java.lang.String)>("");
        temp$30 = interfaceinvoke command.<durbodax.commands.Command: java.lang.Object execute(java.lang.String[])>(tokens);
        goto label8;

     label7:
        nop;
        temp$31 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$31.<java.io.PrintStream: void println(java.lang.String)>("flow:13");
        temp$32 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$32.<java.io.PrintStream: void println(java.lang.String)>("Invalid Command!");

     label8:
        nop;

     label9:
        nop;
        return;
    }

    public void <init>()
    {
        durbodax.Main this;

        this := @this: durbodax.Main;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
