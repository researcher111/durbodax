public class durbodax.commands.CompareCustomerGroups extends java.lang.Object implements durbodax.commands.Command
{

    private final durbodax.daos.CustomerCompareDAO parseInput(java.lang.String[])
    {
        durbodax.commands.CompareCustomerGroups this;
        java.lang.String[] paramsIn, temp$4, ageComparison, temp$11, temp$15, temp$16, temp$22, temp$28, temp$32, incomeComparison, temp$39, temp$43, temp$44, temp$50, temp$56, temp$60, temp$67;
        durbodax.daos.CustomerCompareDAO compDAO, temp$76;
        durbodax.daos.DAOFactory temp$0;
        durbodax.daos.DerbyCustomerCompareDAO temp$1;
        int conditions, i, temp$2, temp$5, temp$9, temp$10, temp$12, temp$13, temp$17, temp$23, temp$29, temp$33, temp$37, temp$38, temp$40, temp$41, temp$45, temp$51, temp$57, temp$61, temp$65, temp$66, temp$68, temp$69, temp$72, temp$73;
        java.io.PrintStream temp$3, temp$8, temp$20, temp$26, temp$36, temp$48, temp$54, temp$64, temp$74;
        java.lang.String temp$6, temp$14, temp$18, temp$24, temp$25, temp$30, temp$31, temp$34, temp$42, temp$46, temp$52, temp$53, temp$58, temp$59, temp$62, maritalStatus, temp$71;
        boolean temp$7, temp$19, temp$35, temp$47, temp$63;
        java.lang.StringBuffer temp$21, temp$27, temp$49, temp$55, temp$70;
        java.util.HashMap temp$75;

        this := @this: durbodax.commands.CompareCustomerGroups;
        paramsIn := @parameter0: java.lang.String[];
        temp$0 = staticinvoke <durbodax.daos.DAOFactory: durbodax.daos.DAOFactory getDAOFactory()>();
        temp$1 = virtualinvoke temp$0.<durbodax.daos.DAOFactory: durbodax.daos.DerbyCustomerCompareDAO getCompareDAO()>();
        compDAO = temp$1;
        conditions = 0;
        i = 1;

     label0:
        nop;
        temp$2 = lengthof paramsIn;
        if i < temp$2 goto label1;

        goto label14;

     label1:
        nop;
        temp$3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("flow:123");
        temp$4 = paramsIn;
        temp$5 = i;
        temp$6 = temp$4[temp$5];
        temp$7 = virtualinvoke temp$6.<java.lang.String: boolean equals(java.lang.Object)>("-a");
        if temp$7 == 0 goto label6;

        goto label2;

     label2:
        nop;
        temp$8 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$8.<java.io.PrintStream: void println(java.lang.String)>("flow:124");
        temp$9 = conditions;
        temp$10 = temp$9 + 1;
        conditions = temp$10;
        temp$11 = paramsIn;
        temp$12 = i;
        temp$13 = temp$12 + 1;
        temp$14 = temp$11[temp$13];
        temp$15 = virtualinvoke temp$14.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");
        ageComparison = temp$15;
        temp$16 = ageComparison;
        temp$17 = 0;
        temp$18 = temp$16[temp$17];
        temp$19 = virtualinvoke temp$18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Under");
        if temp$19 == 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>("flow:125");
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("AGE < ");
        temp$22 = ageComparison;
        temp$23 = 1;
        temp$24 = temp$22[temp$23];
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$24);
        temp$25 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke compDAO.<durbodax.daos.CustomerCompareDAO: void addCondition(java.lang.String)>(temp$25);
        goto label5;

     label4:
        nop;
        temp$26 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$26.<java.io.PrintStream: void println(java.lang.String)>("flow:126");
        temp$27 = new java.lang.StringBuffer;
        specialinvoke temp$27.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("AGE > ");
        temp$28 = ageComparison;
        temp$29 = 1;
        temp$30 = temp$28[temp$29];
        virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$30);
        temp$31 = virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke compDAO.<durbodax.daos.CustomerCompareDAO: void addCondition(java.lang.String)>(temp$31);

     label5:
        nop;

     label6:
        nop;
        temp$32 = paramsIn;
        temp$33 = i;
        temp$34 = temp$32[temp$33];
        temp$35 = virtualinvoke temp$34.<java.lang.String: boolean equals(java.lang.Object)>("-i");
        if temp$35 == 0 goto label11;

        goto label7;

     label7:
        nop;
        temp$36 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$36.<java.io.PrintStream: void println(java.lang.String)>("flow:127");
        temp$37 = conditions;
        temp$38 = temp$37 + 1;
        conditions = temp$38;
        temp$39 = paramsIn;
        temp$40 = i;
        temp$41 = temp$40 + 1;
        temp$42 = temp$39[temp$41];
        temp$43 = virtualinvoke temp$42.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");
        incomeComparison = temp$43;
        temp$44 = incomeComparison;
        temp$45 = 0;
        temp$46 = temp$44[temp$45];
        temp$47 = virtualinvoke temp$46.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Under");
        if temp$47 == 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$48 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$48.<java.io.PrintStream: void println(java.lang.String)>("flow:128");
        temp$49 = new java.lang.StringBuffer;
        specialinvoke temp$49.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("INCTOT < ");
        temp$50 = incomeComparison;
        temp$51 = 1;
        temp$52 = temp$50[temp$51];
        virtualinvoke temp$49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$52);
        temp$53 = virtualinvoke temp$49.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke compDAO.<durbodax.daos.CustomerCompareDAO: void addCondition(java.lang.String)>(temp$53);
        goto label10;

     label9:
        nop;
        temp$54 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$54.<java.io.PrintStream: void println(java.lang.String)>("flow:129");
        temp$55 = new java.lang.StringBuffer;
        specialinvoke temp$55.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("INCTOT > ");
        temp$56 = incomeComparison;
        temp$57 = 1;
        temp$58 = temp$56[temp$57];
        virtualinvoke temp$55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$58);
        temp$59 = virtualinvoke temp$55.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke compDAO.<durbodax.daos.CustomerCompareDAO: void addCondition(java.lang.String)>(temp$59);

     label10:
        nop;

     label11:
        nop;
        temp$60 = paramsIn;
        temp$61 = i;
        temp$62 = temp$60[temp$61];
        temp$63 = virtualinvoke temp$62.<java.lang.String: boolean equals(java.lang.Object)>("-m");
        if temp$63 == 0 goto label13;

        goto label12;

     label12:
        nop;
        temp$64 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$64.<java.io.PrintStream: void println(java.lang.String)>("flow:130");
        temp$65 = conditions;
        temp$66 = temp$65 + 1;
        conditions = temp$66;
        temp$67 = paramsIn;
        temp$68 = i;
        temp$69 = temp$68 + 1;
        maritalStatus = temp$67[temp$69];
        temp$70 = new java.lang.StringBuffer;
        specialinvoke temp$70.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("MARST = ");
        virtualinvoke temp$70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(maritalStatus);
        temp$71 = virtualinvoke temp$70.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke compDAO.<durbodax.daos.CustomerCompareDAO: void addCondition(java.lang.String)>(temp$71);

     label13:
        nop;
        nop;
        temp$72 = i;
        temp$73 = temp$72 + 1;
        i = temp$73;
        goto label0;

     label14:
        nop;
        if conditions == 0 goto label15;

        goto label16;

     label15:
        nop;
        temp$74 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$74.<java.io.PrintStream: void println(java.lang.String)>("flow:131");
        temp$75 = new java.util.HashMap;
        specialinvoke temp$75.<java.util.HashMap: void <init>()>();
        virtualinvoke this.<durbodax.commands.CompareCustomerGroups: void printOutput(java.util.Map)>(temp$75);
        temp$76 = null;
        return temp$76;

     label16:
        nop;
        return compDAO;
    }

    private final void printOutput(java.util.Map)
    {
        durbodax.commands.CompareCustomerGroups this;
        java.util.Map mresultIn;
        java.io.PrintStream temp$0, temp$2, temp$3, temp$4, temp$10;
        int temp$1;
        java.lang.StringBuffer temp$5, temp$11;
        durbodax.customers.Enums.Sex temp$6, temp$12;
        java.lang.Object temp$7, temp$13;
        java.lang.Integer temp$8, temp$14;
        java.lang.String temp$9, temp$15;

        this := @this: durbodax.commands.CompareCustomerGroups;
        mresultIn := @parameter0: java.util.Map;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:132");
        temp$1 = interfaceinvoke mresultIn.<java.util.Map: int size()>();
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        nop;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>("flow:133");
        temp$3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("No Records found:  Please change parameters and retry.\n Must Enter at least one comparison.");
        return;

     label1:
        nop;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Males: ");
        temp$6 = <durbodax.customers.Enums.Sex: durbodax.customers.Enums.Sex Male>;
        temp$7 = interfaceinvoke mresultIn.<java.util.Map: java.lang.Object get(java.lang.Object)>(temp$6);
        temp$8 = (java.lang.Integer) temp$7;
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$8);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("%");
        temp$9 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$9);
        temp$10 = <java.lang.System: java.io.PrintStream out>;
        temp$11 = new java.lang.StringBuffer;
        specialinvoke temp$11.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Females: ");
        temp$12 = <durbodax.customers.Enums.Sex: durbodax.customers.Enums.Sex Female>;
        temp$13 = interfaceinvoke mresultIn.<java.util.Map: java.lang.Object get(java.lang.Object)>(temp$12);
        temp$14 = (java.lang.Integer) temp$13;
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$14);
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("%");
        temp$15 = virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$10.<java.io.PrintStream: void println(java.lang.String)>(temp$15);
        return;
    }

    public java.lang.Object execute(java.lang.String[])
    {
        durbodax.commands.CompareCustomerGroups this;
        java.lang.String[] params;
        java.io.PrintStream temp$0, temp$3, temp$5, temp$6, temp$7;
        java.lang.Object retObj, temp$1;
        durbodax.daos.CustomerCompareDAO dao, temp$2;
        java.util.Map mresult, temp$4;

        this := @this: durbodax.commands.CompareCustomerGroups;
        params := @parameter0: java.lang.String[];
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("flow:133");
        temp$1 = new java.lang.Object;
        specialinvoke temp$1.<java.lang.Object: void <init>()>();
        retObj = temp$1;
        temp$2 = virtualinvoke this.<durbodax.commands.CompareCustomerGroups: durbodax.daos.CustomerCompareDAO parseInput(java.lang.String[])>(params);
        dao = temp$2;
        if dao != null goto label0;

        goto label1;

     label0:
        nop;
        temp$3 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$3.<java.io.PrintStream: void println(java.lang.String)>("flow:134");
        temp$4 = interfaceinvoke dao.<durbodax.daos.CustomerCompareDAO: java.util.Map runQuery()>();
        mresult = temp$4;
        retObj = mresult;
        virtualinvoke this.<durbodax.commands.CompareCustomerGroups: void printOutput(java.util.Map)>(mresult);
        goto label2;

     label1:
        nop;
        temp$5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>("flow:135");
        temp$6 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$6.<java.io.PrintStream: void println(java.lang.String)>("Usage: -a Under||Over-Age  -i Under||Over-Income -m MaritalStatus");
        temp$7 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$7.<java.io.PrintStream: void println(java.lang.String)>("EX:  CompareCustomerGroup Male Over-50 Under-40000 1");

     label2:
        nop;
        return retObj;
    }

    public void <init>()
    {
        durbodax.commands.CompareCustomerGroups this;

        this := @this: durbodax.commands.CompareCustomerGroups;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
